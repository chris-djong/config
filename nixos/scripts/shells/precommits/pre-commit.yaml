#!/bin/bash

# Get the list of changed files in the commit
CHANGED_FILES=$(git diff --cached --name-only)

# Check if any Python files have changed
PYTHON_FILES=()
TS_HTML_FILES=()
EXIT_STATUS=0

for file in $CHANGED_FILES; do
    if [[ "$file" == *.py ]]; then
        python_files+=("$file")
    elif [[ "$file" == *.ts || "$file" == *.html ]]; then
        ts_html_files+=("$file")
    fi
    
    # Check for NOCOMMIT keyword in the commit
    if git diff --cached "$file" | grep -q "NOCOMMIT"; then
        echo "Error: Commit contains 'NOCOMMIT'. Aborting commit."
        EXIT_STATUS=1 
    fi
done

# Run basedpyright and ruff on Python files
if [ ${#python_files[@]} -gt 0 ]; then
    echo "Running basedpyright and ruff on Python files..."
    basedpyright "${python_files[@]}" || error_found=1
    ruff check "${python_files[@]}" || error_found=1
fi

# Run eslint and prettier on TS and HTML files
if [ ${#ts_html_files[@]} -gt 0 ]; then
    echo "Running eslint and prettier on TypeScript and HTML files..."
    eslint "${ts_html_files[@]}" || error_found=1
    prettier --check "${ts_html_files[@]}" || error_found=1
fi


if [ $EXIT_STATUS -ne 0 ]; then
    exit 1
fi
exit 0

